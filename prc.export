:'##############################################################:'# 2014-03-05 ejl export open or completed report via webpage:
:'# 2015-03-31 ejl isr 29880 add status notes::
:'##############################################################:'###      Detail Lines:
:report co "CLOSED"      'writes, ends here:exl(1)="'"{2;exl(2)=3;exl(3)=13;exl(4)=11<12;exl(5)=21<22;exl(6)=31; write exl; end:
::exl(1)=5;exl(2)="'"{2;exl(3)=1;exl(4)=13;exl(5)=11 < 12;:
:4 eq "Y"   'they are normally blank but can be changed to Y and back to N':exl(6)=4:
::declare status; status="":
:'get status text if blank status, find default status::
hasstat:6 ne ""                 '1='status' category, Y=use default:lookup ctl = scheduling_ctl  k=("1"&6) i=A -nx:
nostat:6 eq "":lookup ctl = scheduling_ctl  k=("1Y") i=B -nx:
:not ctl:status="????":
:ctl:status=ctl(3):
:report="OPEN":exl(7)=status; exl(8)=8:
::write exl:
::end:
@once:'##############################################################:'#:
::declare extern type,report,login,clk,errmsg:
::gosub deffile:
::declare rmvst, tmpfile(50,*,g):
::rmvst=remove(tmpfile{".tsv"):
::rmvst=remove(tmpfile{".xls"):
::export ascii exl = (tmpfile{".tsv")  R=\n F=\t:
::exl(1) = "<sheet name=\""{ fn {"\">":
::write exl:
::exl(1) = "<head>":
::write exl:
::exl(1) = @FI {"/export";:
::exl(3)=type<"Priority Scheduling report"<getenv("PFLOC"):
::write exl:
::exl(1)=@td < @tm:
::write exl:
::exl(1)=type<report:
::write exl; exl(1)="";write exl:
:report eq "OPEN":exl(1)="Priority";exl(2)="Assembly";exl(3)="Trav/RPN";exl(4)="Qty";exl(5)="Time In";exl(6)="Hot?"; exl(7)="Status":
:report eq "OPEN":exl(8)="Status Notes":
:report co "CLOSED":exl(1)="Assembly";exl(2)="Trav/RPN";exl(3)="Qty";exl(4)="Time In";exl(5)="Time Out";exl(6)="Turnaround":
::write exl:
::exl(1) = "<freezepoint>":
::write exl:
::exl(1) = "<body style=1>":
::write exl:
::end:
@Done:'##############################################################:'#    Xlmaker Call:
:errmsg ne ""    'existing error from selection prc-login/email issues:goto errout:
:@ts eq "0":errmsg="no records to select"; goto errout:
::close exl; sync:
::'showctr ("18") "Generating Excel":
::rmvst=remove(tmpfile {".txt"):
::system ">" < tmpfile {".xls":
::system "chmod a+rw" < tmpfile {".xls":
::xx="/usr/local/bin/xlmaker -file"< tmpfile {".tsv -desc /usr/local/bin/xlm_"{ fn <"-output"< tmpfile {".xls":
::system xx:
::'showctr ("18") "  E-Mailing Excel  ":
::xx = "echo \"Attached\" | mutt -a" < tmpfile {".xls -s \"Requested Excel"{ fn {"\""< "\"`getemail"< login {"`\"":
::system xx:
::rmvst=remove(tmpfile {".tsv"):
::rmvst=remove(tmpfile {".xls"):
errout:'##############################################################:'# write return value for script:
::gosub deffile:
::rmvst=remove(tmpfile {".log"):
::export ascii htm=(tmpfile{".log") R=\n F=,:
:errmsg eq "":errmsg="Report sent to your email.":
::htm(1)=errmsg:
::write htm; close htm; sync:
::' system "echo \""<type <report< login< clk<"\" | mutt -s prc.export ericl@borisch.com":
::end:
deffile:'::
::pn(50,*,g) = "/tmp/"  ;  fn(50,*,g) = "scheduling-export":
::tmpfile=pn{fn{"_"{type{report{clk:
::return:
